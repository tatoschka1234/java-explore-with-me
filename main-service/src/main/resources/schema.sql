-- USERS
CREATE TABLE IF NOT EXISTS users (
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL
);

CREATE UNIQUE INDEX IF NOT EXISTS uq_users_email_lower ON users (lower(email));

-- CATEGORIES
CREATE TABLE IF NOT EXISTS categories (
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

-- COMPILATIONS
CREATE TABLE IF NOT EXISTS compilations (
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title  VARCHAR(255) NOT NULL,
    pinned BOOLEAN NOT NULL
);

-- EVENTS
CREATE TABLE IF NOT EXISTS events (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title               VARCHAR(120) NOT NULL,
    annotation          VARCHAR(2000),
    description         VARCHAR(7000),
    confirmed_requests  INTEGER     NOT NULL,
    loc_lat             DOUBLE PRECISION NOT NULL,
    loc_lon             DOUBLE PRECISION NOT NULL,
    paid                BOOLEAN     NOT NULL,
    participant_limit   INTEGER     NOT NULL,
    request_moderation  BOOLEAN     NOT NULL,
    created_on          TIMESTAMP(6) NOT NULL,
    event_date          TIMESTAMP(6) NOT NULL,
    published_on        TIMESTAMP(6),
    views               BIGINT      NOT NULL,
    state               VARCHAR(50) DEFAULT 'PENDING',
    category_id         BIGINT NOT NULL,
    initiator_id        BIGINT NOT NULL,
    CONSTRAINT fk_events_category  FOREIGN KEY (category_id)  REFERENCES categories(id),
    CONSTRAINT fk_events_initiator FOREIGN KEY (initiator_id) REFERENCES users(id)
);

-- REQUESTS
CREATE TABLE IF NOT EXISTS requests (
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_date_time  TIMESTAMP(6) NOT NULL,
    status             VARCHAR(50) NOT NULL,
    event_id           BIGINT NOT NULL,
    requester_id       BIGINT NOT NULL,
    CONSTRAINT fk_requests_event     FOREIGN KEY (event_id)     REFERENCES events(id),
    CONSTRAINT fk_requests_requester FOREIGN KEY (requester_id) REFERENCES users(id)
);

-- COMPILATION_EVENTS (m2m)
CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_ce_compilation FOREIGN KEY (compilation_id) REFERENCES compilations(id),
    CONSTRAINT fk_ce_event       FOREIGN KEY (event_id)       REFERENCES events(id)
);

CREATE TABLE IF NOT EXISTS comments (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text        TEXT NOT NULL,
    status      VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
    created_at  TIMESTAMP(6) NOT NULL,
    updated_at  TIMESTAMP(6),
    author_id   BIGINT NOT NULL,
    event_id    BIGINT NOT NULL,
    CONSTRAINT fk_comments_author FOREIGN KEY (author_id) REFERENCES users(id),
    CONSTRAINT fk_comments_event  FOREIGN KEY (event_id)  REFERENCES events(id)
    );
